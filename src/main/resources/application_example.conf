# Global configuration:

client {
    # Client configuration
    debug : false
    port : 12345
    # dispatcher type : default | mutated_gossip
    dispatcher : mutated_gossip
}

demo {
    # Initial data Simulation configuration
    repeat : 3
    epsilon : 0.001
    mean: 100

    # Simulation configuration example
    demo_type : ch_p
    st : 100
    n :  { generator : linear, start: 50, end: 150, step: 10 }
    fanout : 50
    delay : 5000000
    delay_unit : MILLISECONDS


    # demo_type : ch_st
    # st : { generator : linear, start : 8, end : 100000, step: 100}
    #    | { generator : exponential, start : 8, end : 100000, base: 2}
    #    | { generator : from_values, list : [10,20,30] }
    # n : 71

    # demo_type : ch_p
    # st : 100
    # n : { generator : linear, start : 8, end : 100000, step: 100}
    #   | { generator : exponential, start : 8, end : 100000, base: 2}
    #   | { generator : from_values, list : [10,20,30] }
    # f :
    #   | 1

    # demo_type : ch_f
    # st : 100
    # n : 72
    # f : { generator : linear, start : 8, end : 100000, step: 100}
    #   | { generator : exponential, start : 8, end : 100000, base: 2}
    #   | { generator : from_values, list : [10,20,30] }

    # demo_type : ch_fanout  ( dispatcher must be "mutated_gossip")
    # st : 100
    # n : 71
    # delay : 100 #ms
    # f :
    #   | 1
    # fanout : 10
    #        | { generator : linear, start : 0, end : 1, step: 0.1} ###### NAO DAAAAa
    #        | { generator : from_values, list : [0.30, 0.50, 0.70] }

    # demo_type : ch_delay  ( dispatcher must be "mutated_gossip")
    # st : 100
    # n : 71
    # f :
    #   | 1
    # fanout : 10  # absolute value
    # delay : { generator : linear, start : 8, end : 100000, step: 100}
    #       | { generator : exponential, start : 8, end : 100000, base: 2}
    #       | { generator : from_values, list : [10,20,30] }
}

network : {
  # --------------------------
  # Aggregate bandwidth (bytes/sec)
  # <= 0 for infinite

  # Default: 10MB/s
  # bandwidth : 10000000

  # --------------------------
  # Network latency (nsec), incurred by normal packets
  # and by connection establishment / tear down
  # = fixed value or integer distribution

  # Fixed at 1000ns
  # latency : 1000

  # Default: uniform between 1000 and 2000 ns
  # latency : { distribution : uniform, lower : 1000, upper : 2000 }
  latency : { distribution : uniform, lower : 10, upper : 100 }

  # Poisson distribution with 1000ns mean
  # latency : { distribution : poisson, mean : 1000 }

  # --------------------------
  # Network reliability
  # <=0 to drop packet, >0 to keep it
  # = fixed value or integer distribution

  # Reliable network
  reliability : 1

  # No network
  # reliability : 0

  # Randomly drop 10% of packets
  # reliability : { distribution: randombit, ones: 90, zeros: 10 }
}

cpu : {
  # --------------------------
  # Computation step (nsec), incurred by any event
  # = fixed value or integer distribution

  # Default: uniform distribution between 1000 and 2000 ns
  # step : { distribution : uniform, lower : 1000, upper : 2000 }

  # Fixed at 1000ns
  # step : 1000
}

# Local configuration overrides global configuration.
# Default cluster name is "cluster" and default host name is "10_0_0_*".
# Can be changed when setting up the simulation.

# Computation step for host with address 10.0.0.1 in cluster
# cluster.10_0_0_1.cpu.step : 1000

# Randomly drop 50% of packets in cluster
# cluster.network.reliability : { distribution: randombit, ones: 50, zeros: 50 }